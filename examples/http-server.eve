start path resolution
```
  match
     connection = [#http-request]
     split[text:r.request.url token index, by:"/"]
     fr = [#root]
     websocket = if r.request.headers.Sec-WebSocket-Protocol = "eve-json" then true else false     
  bind
     [#path index:1 file:fr]
     [#path index token]
commit
     [#request-object connection websocket]
```

resolve a path
```
match
    [#path index:pindex file:pfile]
    f = pfile.child
    child = [#path index:(pindex + 1) token:f.name]
bind
    child.file := f
```

path search complete
```
match
     [#path index token]
     final = [#path index: count[given: index] file]
     split[text:final.token by:"." token:extoken index:exindex]
     exindex = 2
     // since this object is part of the event context, its
     // not avilable when we're looking for it in send eve bootsrap

commit
     [#complete-object extension:extoken token:final.token file]
```


assert the content type table in the same t as the content response
```
match
     [#complete-object]
bind
     [#content-type suffix:"jpeg" type:"application/jpeg"]
     [#content-type suffix:"css" type:"text/css"]
     [#content-type suffix:"js" type:"application/javascript"]
     [#content-type suffix:"html" type:"text/html"]
```

complete! send content response
```
  match
     r = [#request-object connection websocket:false]
     c = [#complete-object extension file]
     ct = [#content-type suffix:extension]
  commit
    connection.response := [
       content: file.contents
       status:"200"
       reason:"OK"
       header:[Content-Type:ct.type]]
    r := none
    c := none         
```


send eve bootstrap
```
  match
     r = [#request-object connection websocket:false]
     c = [#complete-object token extension:"eve" file]     
     [#root child:[name:"index.html" contents]]
  commit
     connection.response := [
       content: contents
       status:"200"
       reason:"OK"
       header:[Content-Type:"text/html"]]
     r := none
     c := none     
```


start eve program
```
  match
     r = [#request-object connection  websocket:true]
     c = [#complete-object token extension:"eve" file]
  // there may be a terser version here
  commit @bag
        browser = [#bag]
        session = [#bag]
  commit @process
     child = [#process source:file.contents name:token
              scope:[write:session
              read:(browser, session)
              bags:[browser, session]]]
  commit
     connection.upgrade := child
     r := none
     c := none
```


no such file!
```
   match
      not ([#complete-object])
      r = [#request-object connection]
   commit
      connection.response :=
       [status:"404"
        reason:"No such object"
        header: [Spoogle: "nothing"]
        content: ""]
      r := none
```
